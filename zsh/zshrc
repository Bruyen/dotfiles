source $HOME/.fortify.zsh
source $HOME/.fzf_functions.zsh
source $HOME/.fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh

# ----------------
# Vars
# ----------------
export PATH=/usr/local/bin:$HOME/.local/bin:$PATH
export TERM=xterm-256color
export EDITOR='vi'
export ZSH_COLORIZE_STYLE="monokai"
# export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
export JAVA_HOME=/usr/lib/jvm/zulu11.45.27-ca-jdk11.0.10-linux_x64
# export JAVA_HOME=/usr/lib/jvm/jdk-12.0.2/
# export JAVA_HOME=/usr/lib/jvm/zulu-13-amd64
# export JAVA_HOME=/usr/lib/jvm/jdk-14.0.1/
# export JAVA_HOME=/usr/lib/jvm/jdk-17

# TODO: Implement file/path completion
export FZF_DEFAULT_OPTS="--height=30% --min-height=10 --reverse --multi --border --inline-info"
export FZF_DEFAULT_COMMAND='rg --files --no-ignore-vcs --hidden'

export PS_FORMAT="pid,ppid,user,pri,ni,vsz,rss,pcpu,pmem,tty,stat,args" # "ps" process list default output 
# ----------------
# zplug
# ----------------
if [[ ! -d ~/.zplug ]]; then
    # curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh
    git clone https://github.com/zplug/zplug ~/.zplug
    source ~/.zplug/init.zsh && zplug update
else
    source ~/.zplug/init.zsh
fi

# TODO: Migrate away from zplug
zplug "zplug/zplug",                            hook-build:'zplug --self-manage'
zplug "plugins/colored-man-pages",              from:oh-my-zsh
zplug "plugins/colorize",                       from:oh-my-zsh
zplug "plugins/command-not-found",              from:oh-my-zsh
zplug "plugins/extract",                        from:oh-my-zsh
zplug "plugins/golang",                         from:oh-my-zsh
zplug "plugins/tmux",                           from:oh-my-zsh
zplug "modules/completion",                     from:prezto
zplug "modules/history",                        from:prezto
zplug "modules/history-substring-search",       from:prezto, defer:3
zplug "modules/terminal",                       from:prezto
zplug "modules/tmux",                           from:prezto
zplug "zsh-users/zsh-completions"
zplug "tarruda/zsh-autosuggestions"
zplug "BurntSushi/ripgrep",                     defer:3, from:"gh-r", as:"command", use:"*x86_64*linux*", rename-to:"rg"

if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi
zplug load

# ----------------
# powerlevel9k
# ----------------
POWERLEVEL9K_MODE=nerdfont-complete
POWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR=''
POWERLEVEL9K_LEFT_SEGMENT_SEPARATOR=''
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_RPROMPT_ON_NEWLINE=false
POWERLEVEL9K_PROMPT_ADD_NEWLINE=true
POWERLEVEL9K=truncate_beginning
POWERLEVEL9K_VCS_CLEAN_FOREGROUND=black
POWERLEVEL9K_VCS_CLEAN_BACKGROUND=green
POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND=black
POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND=yellow
POWERLEVEL9K_VCS_MODIFIED_FOREGROUND=black
POWERLEVEL9K_VCS_MODIFIED_BACKGROUND=yellow
POWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND=black
POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND=blue
POWERLEVEL9K_DIR_DEFAULT_BACKGROUND=blue
POWERLEVEL9K_DIR_DEFAULT_FOREGROUND=yellow
POWERLEVEL9K_DIR_HOME_BACKGROUND=blue
POWERLEVEL9K_DIR_HOME_FOREGROUND=yellow
POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND=blue
POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND=yellow
POWERLEVEL9K_FOLDER_ICON=
POWERLEVEL9K_STATUS_OK_IN_NON_VERBOSE=true
POWERLEVEL9K_STATUS_VERBOSE=false
POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=0
POWERLEVEL9K_VCS_UNTRACKED_ICON=●
POWERLEVEL9K_VCS_UNSTAGED_ICON=±
POWERLEVEL9K_VCS_INCOMING_CHANGES_ICON=↓
POWERLEVEL9K_VCS_OUTGOING_CHANGES_ICON=↑
POWERLEVEL9K_VCS_COMMIT_ICON=' '
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX='╭%F{black}'
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX='╰%F{red} '
POWERLEVEL9K_CONTEXT_TEMPLATE="%F{cyan}%n %F{white}@ %F{green}%m"
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon ssh root_indicator context dir dir_writable vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(command_execution_time status background_jobs load ram)
source ~/.powerlevel9k/powerlevel9k.zsh-theme

# ----------------
# Personal Aliases
# ----------------
# Prefer when present
if type nvim > /dev/null 2>&1; then
  alias vim='nvim'
  alias vi="nvim"
fi

if type colorls > /dev/null 2>&1; then
  alias ls="colorls --group-directories-first"
  alias la="colorls -la --group-directories-first"
  alias lg="colorls -1a | rg -i ${1}"
  alias tree="colorls --tree=2"
fi

if type colorize_cat > /dev/null 2>&1; then
    alias cat="colorize_cat"
    alias less="colorize_less"
fi

alias vinit="$EDITOR $HOME/.config/nvim/init.vim"
alias pinit="$EDITOR $HOME/.config/nvim/plugins.vim"
alias zshrc="$EDITOR $HOME/.zshrc"
alias zz="source $HOME/.zshrc"
alias bitbrawl="cd /mnt/c/Users/Dude/Projects/BitBrawlers"

alias gd="git diff"
alias gpl="git pull"
alias gp="git push"
alias gpsu='git push --set-upstream origin "$(git branch --show-current)"'
alias gf="git fetch"
alias gl="git log --graph"
alias gs="git status"
alias ga="git add"
alias gc="git commit"
alias gch="git checkout"

# ----------------
# Personal Functions
# ----------------
#
# Search for TODO|FIXME|BUG markers in a directory and open results in a Vim quickfix window
# https://freshman.tech/vim-quickfix-and-location-list/
#
function todos() {
  vim -q <(rg --vimgrep -w -e 'TODO' -e 'FIXME' -e 'BUG' $* .) -c "silent! copen"
}

# ----------------
# Bindings
# ----------------
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
